name: tine20drive CI

on: [push]

defaults:
  run:
    shell: pwsh

jobs:
# ------------------------------------------------------------------------------------------------------------------------------------------
  build:
    name: Build tine20drive
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            include:
            - target: windows-msvc2017_32-cl
              os: windows-latest
              fetch-depth: 1
            - target: windows-msvc2017_64-cl
              os: windows-latest
              fetch-depth: 0
            - target: macos-64-clang
              os: macos-latest
              fetch-depth: 1
            - target: linux-64-gcc
              os: ubuntu-18.04
              fetch-depth: 1
    env:
      CRAFT_TARGET: ${{ matrix.target }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Check out source code
      uses: actions/checkout@v2
      with:
        fetch-depth: ${{ matrix.fetch-depth }}
        submodules: true

    - name: Import Code-Signing Certificates
      if: ${{ matrix.target == 'macos-64-clang' }}
      uses: Apple-Actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

    - name: Clone CraftMaster
      run: git clone --depth=1 https://invent.kde.org/kde/craftmaster.git "$env:HOME/craft/CraftMaster/CraftMaster"

    - name: Craft setup
      run: ${{ github.workspace }}/.github/workflows/.craft.ps1 --setup

    - name: Craft unshelve
      run:  ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --unshelve "${{ github.workspace }}/.craft.shelf"

    - name: Prepare
      run: |
        if ($IsWindows) {
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c dev-utils/nsis
        } elseif($IsLinux) {
            sudo apt-get update -y
            sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libmtdev1 libgl1-mesa-dev libmtdev1 libinput-dev libxkbcommon0 libxcb-icccm4 libxcb-image0 libxcb-render-util0 libxcb-xkb1 libxkbcommon-x11-0 libxcb-keysyms1 libxcb-xinerama0 libsm6
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c dev-utils/linuxdeploy
        }

    - name: Install dependencies
      run: ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --install-deps tine20drive/tine20drive-client

    - name: Build
      run: |
        if ("${{ matrix.target }}" -eq "windows-msvc2017_64-cl") {
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --no-cache --src-dir "${{ github.workspace }}" --configure tine20drive/tine20drive-client
            $env:BUILD_DIR = $(${{ github.workspace }}/.github/workflows/.craft.ps1 -c --get buildDir -q tine20drive-client)
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --run pwsh "${{ github.workspace }}/.github/workflows/.sonar.ps1" --build
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --no-cache --src-dir "${{ github.workspace }}" --install --qmerge tine20drive/tine20drive-client
        } else {
            ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --no-cache --src-dir "${{ github.workspace }}" tine20drive/tine20drive-client
        }

    - name: Sonarcloud
      if: ${{ matrix.target == 'windows-msvc2017_64-cl' }}
      run: |
        $env:BUILD_DIR = $(${{ github.workspace }}/.github/workflows/.craft.ps1 -c --get buildDir -q tine20drive-client)
        ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --run pwsh "${{ github.workspace }}/.github/workflows/.sonar.ps1" --analyze

    - name: Run tests
      run: ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --no-cache --src-dir "${{ github.workspace }}" --test tine20drive/tine20drive-client

#    - name: Signing App
#      if: ${{ matrix.target == 'macos-64-clang' }}
#      run: |
# security list-keychains
# mkdir ${{ github.workspace }}/binaries
# cp -R /Users/runner/craft/CraftMaster/macos-64-clang/build/tine20drive/tine20drive-client/image-RelWithDebInfo-2.8/Applications/KDE/tine20drive.app ${{ github.workspace }}/binaries/
# sudo bash ${{ github.workspace }}/admin/osx/sign_app.sh /Users/runner/craft/CraftMaster/macos-64-clang/build/tine20drive/tine20drive-client/image-RelWithDebInfo-2.8/Applications/KDE/tine20drive.app "${{ secrets.DEVELOPER_ID_APPLICATION }}" "${{ secrets.TEAM_IDENTITY }}"

    - name: Package
      run: ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --no-cache --src-dir "${{ github.workspace }}" --package tine20drive/tine20drive-client

    - name: Prepare artifacts
      run: |
        New-Item -ItemType Directory "${{ github.workspace }}/binaries/" -ErrorAction SilentlyContinue
        Copy-Item "$env:HOME/craft/binaries/*" "${{ github.workspace }}/binaries/"
        ${{ github.workspace }}/.github/workflows/.craft.ps1 -c --shelve "${{ github.workspace }}/.craft.shelf"
        Copy-Item "${{ github.workspace }}/.craft.shelf" "${{ github.workspace }}/binaries/"

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }} - ${{ matrix.target }}
        path: ${{ github.workspace }}/binaries/*

    - name: Make Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        # body_path: ./.github/release_template_MW.md
        files: |
          ${{ github.workspace }}/binaries/*.dmg
          ${{ github.workspace }}/binaries/*.exe
          ${{ github.workspace }}/binaries/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}